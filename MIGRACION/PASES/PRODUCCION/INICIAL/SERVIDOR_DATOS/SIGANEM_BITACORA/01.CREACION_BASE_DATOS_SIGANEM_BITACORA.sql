/*
Deployment script for SIGANEM_BITACORA

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "SIGANEM_BITACORA"
:setvar DefaultFilePrefix "SIGANEM_BITACORA"
:setvar DefaultDataPath "G:\SQL2012\"
:setvar DefaultLogPath "F:\SQL2012\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf', SIZE = 78848KB , MAXSIZE = UNLIMITED, FILEGROWTH = 1024KB)
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf', SIZE = 4672KB , MAXSIZE = 2048GB , FILEGROWTH = 10%) COLLATE Latin1_General_CS_AS
GO

IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET COMPATIBILITY_LEVEL = 100
            WITH ROLLBACK IMMEDIATE;
    END


GO

IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS OFF,
                ANSI_PADDING OFF,
                ANSI_WARNINGS OFF,
                ARITHABORT OFF,
                CONCAT_NULL_YIELDS_NULL OFF,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER OFF,
                ANSI_NULL_DEFAULT OFF,
                CURSOR_DEFAULT GLOBAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY CHECKSUM,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO


IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET MULTI_USER
            WITH ROLLBACK IMMEDIATE;
    END


GO

ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_WRITE
            WITH ROLLBACK IMMEDIATE;
    END


GO

USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[BITACORAS_2016]...';


GO
CREATE TABLE [dbo].[BITACORAS_2016](
	[Id_Bitacora] [int] IDENTITY(1,1) NOT NULL,
	[Id_Accion] [int] NULL,
	[Id_Modulo] [int] NULL,
	[Cod_Accion] [int] NULL,
	[Cod_Modulo] [int] NULL,
	[Cod_Empresa] [int] NULL,
	[Cod_Sistema] [varchar](20) NULL,
	[Cod_Usuario] [varchar](20) NULL,
	[Ano] [int] NULL,
	[Dato_Actualizado] [varchar](8000) NULL,
	[Dato_Eliminado] [varchar](8000) NULL,
	[Dato_Nuevo] [varchar](8000) NULL,
	[Des_Registro] [varchar](4000) NULL,
	[Fecha] [int] NULL,
	[Fecha_Hora] [datetime] NULL,
	[Hora] [varchar](8) NULL,
	[Mes] [int] NULL,
	[Ip_Origen] [varchar](15) NULL,
	[Oficina_Tx] [int] NULL,
	[Terminal_Tx] [varchar](12) NULL,
	[Mcaddr_Tx] [varchar](20) NULL,
	[Monto_Tx] [numeric](20, 0) NULL,
 CONSTRAINT [PK_BITACORAS_2016] PRIMARY KEY CLUSTERED 
(
	[Id_Bitacora] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY];

GO
PRINT N'Creating [dbo].[Pa_Bitacora_Inserta]...';


GO

CREATE PROCEDURE [dbo].[pa_Bitacora_Inserta]
(
	@piCod_Accion		INT,
	@piCod_Modulo		INT,
	@piCod_Empresa		INT,
	@psCod_Sistema		VARCHAR (20),
	@psCod_Usuario		VARCHAR (20),	
	@psDato_Nuevo		VARCHAR(MAX),
	@psDato_Actualizado	VARCHAR(MAX),
	@psDato_Eliminado	VARCHAR(MAX),
	@psDes_Registro		VARCHAR(8000)
)
	
AS
/******************************************************************************************************************************************************
<Nombre>Pa_Bitacora_Inserta</Nombre>
<Sistema>N.A.</Sistema>
<Descripción>Procedimiento almacenado que inserta en la bitácora la información del proceso ejecutado </Descripción>
<Entradas>
	@piCod_Empresa	=	Código de la Empresa
	@piCod_Modulo	=	Código del módulo
	@piCod_Accion	=	Código de la acción ejecutada
	@psCod_Sistema	=	Código del Sistema
	@psCod_Usuario	=	Código del Usuario que ejecuta la acción
	@psDato_Nuevo	=	Detalle de los datos nuevos
	@psDato_Actualizado =  Detalle de los datos actualizados
	@psDato_Eliminado = Detalle de los datos eliminados
	@psDes_Registro	 = Descripción de la información del registro</Entradas>
<Salidas></Salidas>
<Autor>Jéssica Alvarado C.</Autor>
<Fecha>Octubre del 2013</Fecha>
<Requerimiento>1-23903790</Requerimiento>
<Versión>1.0</Versión>
    	<Historial>
    	  <Cambio>
        	<Autor></Autor>
					<Requerimiento></Requerimiento>
					<Fecha></Fecha>
          <Descripción></Descripción>
        </Cambio>
    	</Historial>
******************************************************************************************************************************************************/
BEGIN

	DECLARE @csNombre_Base_Datos	VARCHAR (50),
			@csSentencia_Insertar	VARCHAR(MAX),
			@vsNombre_tabla			VARCHAR (50),
			@viId_Modulo			INT,		
			@viId_Accion			INT

	SET	@csNombre_Base_Datos ='SIGANEM_BITACORA'
	SET	@vsNombre_tabla = 'BITACORAS_' + CONVERT(VARCHAR,DATEPART(YEAR,GETDATE()))
	
	--Selecciona el Id correspondiente al módulo que se esta utilizando
	SELECT @viId_Modulo = Id_Modulo
	FROM SIGANEM.dbo.MODULOS 
	WHERE Cod_Modulo = @piCod_Modulo
	
	--Selecciona el Id correspondiente a la acción que se esta ejecutando
	SELECT @viId_Accion = Id_Accion 
	FROM SIGANEM.dbo.ACCIONES
	WHERE Cod_Accion = @piCod_Accion

	SELECT @csSentencia_Insertar =
	'INSERT INTO ' + @csNombre_Base_Datos + '.[dbo].' + @vsNombre_tabla +
	'(
		Id_Accion
		,Id_Modulo
		,Cod_Accion
	    ,Cod_Modulo
	    ,Cod_Empresa
	    ,Cod_Sistema		
		,Cod_Usuario
		,Ano
		,Dato_Actualizado
		,Dato_Eliminado
		,Dato_Nuevo	
		,Des_Registro
		,Fecha
		,Fecha_Hora
		,Hora
		,Mes	
	) VALUES('	
		+CONVERT(VARCHAR,ISNULL(@viId_Accion,''))+','
		+CONVERT(VARCHAR,ISNULL(@viId_Modulo,''))+','
		+CONVERT(VARCHAR,ISNULL(@piCod_Accion,''))+','
		+CONVERT(VARCHAR,ISNULL(@piCod_Modulo,''))+','
		+CONVERT(VARCHAR,ISNULL(@piCod_Empresa,''))+','
		+''''+ISNULL(@psCod_Sistema,'')+''''+','
		+''''+ISNULL(@psCod_Usuario,'No Definido')+''''+','
		+CONVERT(VARCHAR,DATEPART(YEAR,GETDATE()))+','
		+''''+ISNULL(@psDato_Actualizado,'')+''''+','
		+''''+ISNULL(@psDato_Eliminado,'')+''''+','
		+''''+ISNULL(@psDato_Nuevo,'')+''''+','
		+''''+ISNULL(@psDes_Registro,'')+''''+','
		+CONVERT(VARCHAR,GETDATE(),112)+','
		+''''+CONVERT(VARCHAR,GETDATE(),109)+''''+',' 
		+''''+SUBSTRING((CONVERT(VARCHAR,GETDATE(),114)),1,5)+''','
		+CONVERT(VARCHAR,DATEPART(MONTH,GETDATE())) +')'

	EXEC  ( @csSentencia_Insertar)

END

GO



